{"version":3,"sources":["store/types/authTypes.ts","store/types/usersTypes.ts","components/Spinner.tsx","assets/color_logo.svg","store/reducers/auth.ts","utils/persistance.ts","store/reducers/users.ts","store/index.tsx","styles/Theme.ts","index.tsx"],"names":["SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","LOG_OUT","LOAD_PREV_SESSION","USER_SESSION","LOAD_USER_LIST","LOAD_USER_LIST_FAILED","LOAD_USER_LIST_SUCCESS","StyledSpinner","styled","Box","theme","palette","background","default","colorfulLogo","Spinner","loading","className","module","exports","initialState","user","isFetching","isAuthenticated","error","signIngStart","state","action","signInSuccess","payload","updatedState","key","object","_item","JSON","stringify","localStorage","setItem","savePersistance","signInFailed","loadPrevSession","prevState","getItem","parse","getPersistance","logOut","removeItem","authReducer","type","intialState","users","page","per_page","total","total_pages","loadUserStart","loadUsersFailed","loadUsersSuccess","viewData","usersReducer","rootReducer","combineReducers","auth","middlewares","thunk","middlewaresEnhancer","applyMiddleware","store","createStore","composeWithDevTools","createTheme","primary","main","overrides","MuiPaper","rounded","borderRadius","MuiTypography","colorPrimary","fontSize","color","fontWeight","textAlign","MuiOutlinedInput","root","borderColor","margin","MuiFormLabel","App","lazy","Promise","all","resolve","setTimeout","then","ReactDOM","render","StrictMode","NoSsr","Theme","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.04ed7eed.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS'\r\nexport const SIGN_IN_FAILED = 'SIGN_IN_FAILED'\r\n\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\nexport const LOAD_PREV_SESSION = 'LOAD_PREV_SESSION'\r\n\r\n// localStorage key for User Session \r\nexport const USER_SESSION = 'USER_SESSION'\r\n\r\nexport type Creds = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport type User = {\r\n    token: string;\r\n    email: string;\r\n    first_name?: string;\r\n    last_name?: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport interface SignInStart {\r\n    type: typeof SIGN_IN\r\n}\r\n\r\nexport interface SignInSuccess {\r\n    type: typeof SIGN_IN_SUCCESS\r\n    payload: { user: User }\r\n}\r\n\r\nexport interface SignInFailed {\r\n    type: typeof SIGN_IN_FAILED\r\n    payload: { error: string }\r\n}\r\n\r\nexport interface LoadPrevSession {\r\n    type: typeof LOAD_PREV_SESSION\r\n}\r\n\r\nexport interface LogOut {\r\n    type: typeof LOG_OUT\r\n}\r\n\r\nexport type AuthDispatchActions =\r\n    SignInStart |\r\n    SignInSuccess |\r\n    SignInFailed |\r\n    LoadPrevSession |\r\n    LogOut\r\n\r\n","import { UsersI } from \"store/reducers/users\";\r\n\r\nexport const LOAD_USER_LIST = 'LOAD_USER_LIST';\r\nexport const LOAD_USER_LIST_FAILED = 'LOAD_USER_LIST_FAILED';\r\nexport const LOAD_USER_LIST_SUCCESS = 'LOAD_USER_LIST_SUCCESS';\r\n\r\nexport const CHANGE_PAGE_START = 'CHANGE_PAGE_START';\r\nexport const CHANGE_PAGE_FAILED = 'CHANGE_PAGE_FAILED';\r\nexport const CHANGE_PAGE_SUCCESS = 'CHANGE_PAGE_SUCCESS';\r\n\r\nexport interface ChangePageStart {\r\n    type: typeof CHANGE_PAGE_START\r\n}\r\n\r\nexport interface ChangePageFailed {\r\n    type: typeof CHANGE_PAGE_FAILED\r\n    payload: { error: string }\r\n}\r\n\r\nexport interface ChangePageSuccess {\r\n    type: typeof CHANGE_PAGE_SUCCESS\r\n    payload: { viewData: UsersI }\r\n}\r\n\r\n\r\nexport interface LoadUsers {\r\n    type: typeof LOAD_USER_LIST\r\n}\r\n\r\nexport interface LoadUsersFailed {\r\n    type: typeof LOAD_USER_LIST_FAILED\r\n    payload: { error: string }\r\n}\r\n\r\nexport interface LoadUserSuccess {\r\n    type: typeof LOAD_USER_LIST_SUCCESS\r\n    payload: { viewData: UsersI }\r\n}\r\n\r\nexport interface NextPage {\r\n    type: typeof LOAD_USER_LIST_SUCCESS\r\n    payload: { viewData: UsersI }\r\n}\r\n\r\nexport type UserDispatchActions =\r\n    LoadUsers |\r\n    LoadUserSuccess |\r\n    LoadUsersFailed |\r\n    ChangePageStart |\r\n    ChangePageFailed |\r\n    ChangePageSuccess","import { Box } from \"@material-ui/core\";\r\nimport React, { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport colorfulLogo from '../assets/color_logo.svg';\r\n\r\nconst StyledSpinner = styled(Box)`\r\n${({ theme }) => `\r\n\r\n    position: absolute; \r\n    width: 100%; \r\n    height: 100%; \r\n    background-color: ${theme.palette.background.default};\r\n    top: 0; \r\n    left: 0; \r\n    display: flex; \r\n    align-items:center; \r\n    justify-content: center; \r\n    \r\n    span {\r\n        animation: App-logo-fade 1s ease-in-out;\r\n        width: 100%;\r\n        height: 100%; \r\n        max-height: 300px;\r\n        max-width: 130px; \r\n        background: url('${colorfulLogo}');\r\n        background-size: contain;\r\n        background-position: center; \r\n        background-repeat: no-repeat;\r\n    }   \r\n    \r\n    @keyframes App-logo-fade {\r\n        from {\r\n            opacity: 0;\r\n            transform: translateY(15px);\r\n        }\r\n        to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n`}`;\r\n\r\n\r\ninterface SpinnerProps {\r\n    loading: boolean\r\n}\r\n\r\nconst Spinner: FC<SpinnerProps> = ({ loading }) => {\r\n\r\n    if (!loading) return null\r\n\r\n    return (\r\n        <StyledSpinner className=\"spinner\">\r\n            <span></span>\r\n        </StyledSpinner>\r\n    )\r\n}\r\n\r\nexport default Spinner","module.exports = __webpack_public_path__ + \"static/media/color_logo.29bd5dd4.svg\";","import { AuthDispatchActions, LoadPrevSession, LOAD_PREV_SESSION, LogOut, LOG_OUT, SignInFailed, SignInStart, SignInSuccess, SIGN_IN, SIGN_IN_FAILED, SIGN_IN_SUCCESS, User, USER_SESSION } from \"store/types/authTypes\";\r\nimport { getPersistance, removePersistance, savePersistance } from \"utils/persistance\";\r\n\r\nexport interface AuthState {\r\n    user: User\r\n    isFetching: boolean\r\n    isAuthenticated: boolean\r\n    error: string\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    user: {} as User,\r\n    isFetching: false,\r\n    isAuthenticated: false,\r\n    error: ''\r\n}\r\n\r\nconst signIngStart = (state: AuthState, action: SignInStart): AuthState => {\r\n    return {\r\n        ...state,\r\n        isFetching: true\r\n    }\r\n}\r\n\r\n\r\nconst signInSuccess = (state: AuthState, action: SignInSuccess): AuthState => {\r\n\r\n    const { user } = action.payload;\r\n\r\n    const updatedState: AuthState = {\r\n        ...state,\r\n        user,\r\n        isFetching: false,\r\n        isAuthenticated: true\r\n    }\r\n\r\n    savePersistance(USER_SESSION, updatedState);\r\n\r\n    return updatedState\r\n}\r\n\r\nconst signInFailed = (state: AuthState, action: SignInFailed): AuthState => {\r\n\r\n    const { error } = action.payload;\r\n\r\n    const updatedState: AuthState = {\r\n        ...state,\r\n        isFetching: false,\r\n        error: error\r\n    }\r\n\r\n    return updatedState\r\n}\r\n\r\nconst loadPrevSession = (state: AuthState, action: LoadPrevSession): AuthState => {\r\n\r\n    const prevState: AuthState = getPersistance(USER_SESSION);\r\n    if (prevState) return prevState\r\n\r\n    return state\r\n}\r\n\r\n\r\nconst logOut = (state: AuthState, action: LogOut): AuthState => {\r\n\r\n    const updatedState: AuthState = { ...initialState };\r\n    removePersistance(USER_SESSION);\r\n\r\n    return updatedState\r\n}\r\n\r\nconst authReducer = (state: AuthState = initialState, action: AuthDispatchActions): AuthState => {\r\n    switch (action.type) {\r\n        case LOG_OUT: return logOut(state, action);\r\n        case SIGN_IN: return signIngStart(state, action);\r\n        case SIGN_IN_FAILED: return signInFailed(state, action);\r\n        case SIGN_IN_SUCCESS: return signInSuccess(state, action);\r\n        case LOAD_PREV_SESSION: return loadPrevSession(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","export const savePersistance = (key: string, object: Object) => {\r\n    const _item = JSON.stringify(object);\r\n    localStorage.setItem(key, _item);\r\n}\r\n\r\nexport const getPersistance = (key: string): Object | any => {\r\n    let _item = localStorage.getItem(key);\r\n    return _item ? JSON.parse(_item) : null\r\n}\r\n\r\nexport const removePersistance = (key: string) => {\r\n    localStorage.removeItem(key);\r\n}","import { User } from \"store/types/authTypes\";\r\nimport {\r\n    LoadUsers,\r\n    LoadUsersFailed,\r\n    LoadUserSuccess,\r\n    LOAD_USER_LIST,\r\n    LOAD_USER_LIST_FAILED,\r\n    LOAD_USER_LIST_SUCCESS,\r\n    UserDispatchActions\r\n} from \"store/types/usersTypes\";\r\n\r\n\r\ninterface PaginationI {\r\n    page: number\r\n    per_page: number\r\n    total: number\r\n    total_pages: number\r\n}\r\n\r\nexport interface UsersI extends PaginationI {\r\n    users: Array<User>\r\n    isFetching?: boolean,\r\n    error?: string\r\n}\r\n\r\nconst intialState: UsersI = {\r\n    users: [],\r\n    isFetching: false,\r\n    page: 1,\r\n    per_page: 0,\r\n    total: 0,\r\n    total_pages: 0\r\n}\r\n\r\nconst loadUserStart = (state: UsersI, action: LoadUsers): UsersI => {\r\n    return {\r\n        ...state,\r\n        isFetching: true\r\n    }\r\n}\r\n\r\nconst loadUsersFailed = (state: UsersI, action: LoadUsersFailed): UsersI => {\r\n\r\n    const { error } = action.payload;\r\n    const updatedState: UsersI = {\r\n        ...state,\r\n        error,\r\n        isFetching: false\r\n    }\r\n\r\n    return updatedState\r\n}\r\n\r\n\r\nconst loadUsersSuccess = (state: UsersI, action: LoadUserSuccess): UsersI => {\r\n\r\n    const { users, page, per_page, total, total_pages } = action.payload.viewData;\r\n\r\n    const updatedState: UsersI = {\r\n        ...state,\r\n        isFetching: false,\r\n        users: [...users],\r\n        page,\r\n        per_page,\r\n        total,\r\n        total_pages\r\n    }\r\n\r\n    return updatedState\r\n\r\n}\r\n\r\n\r\nconst usersReducer = (state: UsersI = intialState, action: UserDispatchActions): UsersI => {\r\n    switch (action.type) {\r\n        case LOAD_USER_LIST: return loadUserStart(state, action);\r\n        case LOAD_USER_LIST_FAILED: return loadUsersFailed(state, action);\r\n        case LOAD_USER_LIST_SUCCESS: return loadUsersSuccess(state, action);\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport authReducer from './reducers/auth'\nimport usersReducer from './reducers/users';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  users: usersReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>;\nconst middlewares = [thunk];\nconst middlewaresEnhancer = applyMiddleware(...middlewares);\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(middlewaresEnhancer)\n);\n\nexport default store;\n","// eslint-disable-next-line\r\nimport type from '@material-ui/lab/themeAugmentation';\r\nimport { createTheme, Theme, ThemeOptions } from \"@material-ui/core\";\r\n\r\nconst themeOptions: ThemeOptions = {\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: '#003472'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiPaper: {\r\n            rounded: {\r\n                borderRadius: 0\r\n            }\r\n        },\r\n        MuiTypography: {\r\n            colorPrimary: {\r\n                fontSize: '2rem',\r\n                color: 'white',\r\n                fontWeight: 'bold',\r\n                textAlign: 'center'\r\n            }\r\n        },\r\n        MuiOutlinedInput: {\r\n            root: {\r\n                borderRadius: 0,\r\n                borderColor: 'white',\r\n                color: 'white',\r\n                margin: '10px 0px',\r\n                \"&$focused\": {\r\n                    \"color\": \"white\"\r\n                }\r\n            }\r\n        },\r\n        MuiFormLabel: {\r\n            root: {\r\n                color: 'white'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet theme: Theme = createTheme(themeOptions);\r\n\r\nexport default theme; ","import store from \"store\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { NoSsr, ThemeProvider as MuiThemeProvider } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport Theme from './styles/Theme';\r\n\r\nimport './index.css'\r\nimport Spinner from \"components/Spinner\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nconst App = lazy(() =>\r\n  Promise.all([\r\n    import('./app/App'),\r\n    new Promise(resolve => setTimeout(resolve, 1200))\r\n  ]).then(([moduleExports]) => moduleExports));\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <NoSsr>\r\n        <MuiThemeProvider theme={Theme}>\r\n          <ThemeProvider theme={Theme}>\r\n            <Suspense fallback={<Spinner loading />}>\r\n              <BrowserRouter>\r\n                <App />\r\n              </BrowserRouter>\r\n            </Suspense>\r\n          </ThemeProvider>\r\n        </MuiThemeProvider>\r\n      </NoSsr>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}