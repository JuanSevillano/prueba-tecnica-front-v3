{"version":3,"sources":["assets/white_logo.svg","store/axiosConfig.ts","store/actions/auth.ts","components/Nav.tsx","hoc/AppLayout.tsx","components/FieldCustom.tsx","pages/Login.tsx","components/UserCard.tsx","store/actions/users.ts","pages/UserList.tsx","app/Routes.ts","utils/useRouter.ts","app/ViewTransition.tsx","app/App.tsx"],"names":["module","exports","api","axios","create","baseURL","SignInStart","type","SIGN_IN","SignInFailed","error","SIGN_IN_FAILED","payload","SignInSuccess","user","SIGN_IN_SUCCESS","Nav","open","isAuthenticated","onClose","anchorRef","useRef","dispatch","useDispatch","handleListKeyDown","event","key","preventDefault","logOutHandler","LOG_OUT","AppBar","color","position","Toolbar","IconButton","onClick","ref","Person","Popper","transition","disablePortal","role","undefined","anchorEl","current","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","onKeyDown","MenuItem","Typography","variant","first_name","last_name","StyledLayout","styled","Box","theme","palette","background","default","AppLayout","children","useSelector","state","auth","useState","setOpen","prev","StyledTextField","props","TextField","InputLabelProps","className","fullWidth","square","common","white","FieldCustom","mockupData","initialState","email","password","StyledLogin","darken","Login","creds","setCreds","isFetching","Spinner","loading","onSubmit","validEmail","validPass","a","body","post","data","token","get","profile","message","response","SignIn","src","whiteLogo","alt","required","label","onChange","e","value","target","helperText","Button","StyledCard","Card","UserCard","avatar","delay","CardActionArea","CardMedia","height","image","title","CardContent","gutterBottom","component","loadUsers","pagination","loadUsersStart","endpoint","userlist","Object","values","page","per_page","total","total_pages","loadUsersSuccess","users","loadUsersFailed","LOAD_USER_LIST","LOAD_USER_LIST_FAILED","viewData","LOAD_USER_LIST_SUCCESS","StyledList","Routes","url","view","useEffect","Skeleton","map","index","filter","el","Pagination","shape","count","useRouter","useContext","__RouterContext","StyledView","ViewTransition","routes","isAuth","location","size","width","views","useTransition","pathname","from","opacity","transform","enter","leave","config","slow","item","div","exact","path","App","history","useHistory","LOAD_PREV_SESSION","push"],"mappings":"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","file":"static/js/4.2e6b3324.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white_logo.b5439303.svg\";","import axios, { Axios, AxiosRequestConfig } from \"axios\";\r\n\r\nconst axiosConfig: AxiosRequestConfig = {\r\n    baseURL: 'https://reqres.in/api/'\r\n}\r\n\r\nconst api: Axios = axios.create(axiosConfig);\r\n\r\nexport default api;\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport api from \"store/axiosConfig\";\r\nimport {\r\n    Creds,\r\n    LOAD_PREV_SESSION,\r\n    LOG_OUT,\r\n    SIGN_IN,\r\n    SIGN_IN_FAILED,\r\n    SIGN_IN_SUCCESS,\r\n    User\r\n} from \"store/types/authTypes\";\r\n\r\n\r\nexport const LoadPrevSession = () => ({\r\n    type: LOAD_PREV_SESSION\r\n})\r\nexport const SignIn = (creds: Creds) => async (dispatch: Dispatch) => {\r\n    try {\r\n\r\n        dispatch(SignInStart());\r\n\r\n        const { email, password } = creds;\r\n        const body = { email, password };\r\n\r\n        const { data } = await api.post('login/', body);\r\n        const { token } = data;\r\n        // Guessing user id, due to there's not endpoint for /users/token  \r\n        const id: number = 4;\r\n\r\n\r\n        const profile = await api.get(`users/${id}`);\r\n        const user: User = {\r\n            token,\r\n            ...profile.data\r\n        };\r\n        dispatch(SignInSuccess(user));\r\n\r\n\r\n    } catch (error) {\r\n        // @ts-ignore\r\n        const message = error.response.data.error;\r\n        dispatch(SignInFailed(message));\r\n    }\r\n}\r\n\r\nconst SignInStart = () => ({\r\n    type: SIGN_IN\r\n})\r\n\r\nconst SignInFailed = (error: string) => ({\r\n    type: SIGN_IN_FAILED,\r\n    payload: { error: error }\r\n})\r\n\r\nconst SignInSuccess = (user: User) => ({\r\n    type: SIGN_IN_SUCCESS,\r\n    payload: { user: user }\r\n})\r\n\r\n\r\nexport const LogOut = () => ({\r\n    type: LOG_OUT\r\n})","import { AppBar, ClickAwayListener, Grow, IconButton, MenuItem, MenuList, Paper, Popper, Toolbar, Typography } from '@material-ui/core';\r\nimport { Person } from '@material-ui/icons';\r\nimport React, { FC, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LogOut } from 'store/actions/auth';\r\nimport { User } from 'store/types/authTypes';\r\n\r\ninterface NavProps {\r\n    user: User\r\n    open: boolean\r\n    onClose: any\r\n    isAuthenticated: boolean\r\n}\r\n\r\nconst Nav: FC<NavProps> = ({ open, isAuthenticated, user, onClose }) => {\r\n\r\n\r\n    const anchorRef = useRef<HTMLButtonElement>(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleListKeyDown = (event) => {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            onClose();\r\n        }\r\n    }\r\n\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(LogOut());\r\n    }\r\n\r\n    if (isAuthenticated) return (\r\n        <AppBar color=\"primary\" position=\"fixed\">\r\n            <Toolbar>\r\n                <IconButton\r\n                    onClick={onClose}\r\n                    ref={anchorRef}>\r\n                    <Person />\r\n                </IconButton>\r\n                <Popper\r\n                    open={open}\r\n                    transition\r\n                    disablePortal\r\n                    role={undefined}\r\n                    anchorEl={anchorRef.current}\r\n                >\r\n                    {\r\n                        ({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom'\r\n                                        ? 'center top'\r\n                                        : 'center bottom'\r\n                                }}>\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={onClose}>\r\n                                        <MenuList\r\n                                            id=\"user-menu\"\r\n                                            autoFocusItem={open}\r\n                                            onKeyDown={handleListKeyDown}>\r\n\r\n                                            <MenuItem onClick={logOutHandler}>Cerrar sesión</MenuItem>\r\n\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )\r\n                    }\r\n                </Popper>\r\n                <Typography variant=\"h6\">\r\n                    La liga - Bienvenidx {user.first_name} {user.last_name}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n\r\n    return null\r\n}\r\n\r\nexport default Nav","\r\nimport { Box } from \"@material-ui/core\";\r\nimport Nav from \"components/Nav\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { AppState } from \"store\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLayout = styled(Box)`\r\n${({ theme }) => `\r\n    height:100%;\r\n    width: 100%;\r\n    background-color: ${theme.palette.background.default}\r\n`}`;\r\n\r\nconst AppLayout: FC<{}> = ({ children }) => {\r\n\r\n\r\n    const { user, isAuthenticated }: any = useSelector<AppState>(state => state.auth);\r\n\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const navOpenerHandler = () => setOpen(prev => !prev);\r\n\r\n    return (\r\n        <StyledLayout>\r\n            <Nav\r\n                key='nav bar'\r\n                open={open}\r\n                user={user}\r\n                onClose={navOpenerHandler}\r\n                isAuthenticated={isAuthenticated}\r\n            />\r\n            {children}\r\n\r\n        </StyledLayout>\r\n    )\r\n}\r\n\r\n\r\nexport default AppLayout","import { TextField, TextFieldProps } from '@material-ui/core';\r\nimport { common } from '@material-ui/core/colors';\r\nimport React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTextField = styled((props) => (\r\n\t<TextField\r\n\t\tInputLabelProps={{\r\n\t\t\tclassName: 'custom-label'\r\n\t\t}}\r\n\t\t{...props}\r\n\t\tfullWidth\r\n\t\tvariant=\"outlined\"\r\n\t\tsquare=\"true\"\r\n\t/>\r\n))`\r\n${({ theme }) => `\r\n\t.custom-label{\r\n\t\tcolor: ${common.white};\r\n\t}\r\n`}`;\r\n\r\n\r\nconst FieldCustom: FC<TextFieldProps> = (props: TextFieldProps) => {\r\n\treturn (\r\n\t\t<StyledTextField {...props} />\r\n\t)\r\n}\r\n\r\nexport default FieldCustom\r\n","import { Box, Button, darken, Typography } from '@material-ui/core';\r\nimport Spinner from 'components/Spinner';\r\nimport FieldCustom from 'components/FieldCustom';\r\nimport React, { FC, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from 'store';\r\nimport { SignIn } from 'store/actions/auth';\r\nimport { Creds } from 'store/types/authTypes';\r\nimport styled from 'styled-components';\r\n\r\nimport whiteLogo from '../assets/white_logo.svg';\r\n\r\ninterface LoginI {\r\n\ttitle: string\r\n\tlogo: string\r\n\tbuttonText: string\r\n\theaderImage: string\r\n}\r\n\r\nconst mockupData: LoginI = {\r\n\ttitle: `Bienvenido al Test de La Liga`,\r\n\tlogo: `https://upload.wikimedia.org/wikipedia/commons/1/13/LaLiga.svg`,\r\n\tbuttonText: `Iniciar Sesión`,\r\n\theaderImage: `https://fanslaliga.laliga.com/static/img/background.e8e7288.png`\r\n}\r\n\r\n\r\nconst initialState: Creds = {\r\n\temail: '',\r\n\tpassword: ''\r\n}\r\n\r\n\r\nconst StyledLogin = styled(Box)`\r\n${({ theme }) => `\r\n\tposition: relative; \r\n\tdisplay: flex;\r\n\tjustity-content: center; \r\n\talign-items: center;\r\n\tmargin: auto;\r\n\twidth: 100%;\r\n\theight:100%;\r\n\tmax-width: 600px;\r\n\tform {\r\n\t\twidth:100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex; \r\n\t\tflex-wrap: wrap; \r\n\t\talign-items:center;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 0 15px;\r\n\t\tbackground-color: ${darken(theme.palette.background.default, 0.5)};\r\n\t\tsection {\r\n\t\t\tjustify-self: flex-start;\r\n\t\t\twidth: 100%; \r\n\t\t\theight: 30%; \r\n\t\t\tbackground: url(\"${mockupData.headerImage}\");\r\n\t\t\tbackground-size: cover;\r\n\t\t\tbackground-position:center; \r\n\t\t}\r\n\t\timg {\r\n\t\t\twidth: 130px;\r\n\t\t\tmargin: 0  auto;\r\n\t\t\ttransform: translateY(-40%);\r\n\t\t\tpadding: 20px; \r\n\t\t}\r\n\t}\t\r\n`}`;\r\n\r\n\r\nconst Login: FC<{}> = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst [creds, setCreds] = useState<Creds>(initialState);\r\n\r\n\tconst { error, isFetching }: any = useSelector<AppState>(state => state.auth);\r\n\r\n\r\n\tconst submitHandler = event => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconst validEmail = creds.email !== initialState.email;\r\n\t\tconst validPass = creds.password !== initialState.password;\r\n\r\n\t\tif (!validEmail && !validPass) {\r\n\t\t\tsetCreds(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\terror: !validEmail ? 'Email no valido' : 'Contraseña no valida'\r\n\t\t\t}))\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdispatch(SignIn(creds));\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledLogin>\r\n\t\t\t<Spinner loading={isFetching} />\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<section></section>\r\n\t\t\t\t<img src={whiteLogo} alt='logo' />\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography color='primary' variant='h1'>{mockupData.title}</Typography>\r\n\t\t\t\t\t<FieldCustom\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"correo\"\r\n\t\t\t\t\t\terror={error ? true : false}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tconst { value } = e.target;\r\n\t\t\t\t\t\t\tsetCreds(prev => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\temail: value\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FieldCustom\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tlabel=\"contraseña\"\r\n\t\t\t\t\t\terror={error ? true : false}\r\n\t\t\t\t\t\thelperText={error}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tconst { value } = e.target;\r\n\t\t\t\t\t\t\tsetCreds(prev => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\tpassword: value\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tvariant='contained'>\r\n\t\t\t\t\t\t{mockupData.buttonText}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</form>\r\n\t\t</StyledLogin>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import {\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    CardContent,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, { FC } from \"react\";\r\nimport { User } from \"store/types/authTypes\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCard = styled(Card)`\r\n${({ theme }) => `\r\n    width: 100%;\r\n    margin: 20px 0;\r\n    opacity: 1;\r\n    animation: Entrance 0.5s  ease-in;\r\n    @media (min-width: 600px){\r\n        \r\n    }\r\n    @keyframes Entrance {\r\n        from {\r\n            opacity: 0;\r\n            transform: translateY(15px);\r\n        }\r\n        to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n`}`;\r\n\r\n\r\n\r\ninterface UCardI extends User {\r\n    delay: number;\r\n}\r\n\r\nconst UserCard: FC<UCardI> = ({ avatar, first_name, last_name, email, delay }) => {\r\n\r\n    return (\r\n        <StyledCard>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className=\"media\"\r\n                    style={{ height: '190px' }}\r\n                    image={avatar}\r\n                    title={first_name}\r\n                />\r\n                <CardContent>\r\n\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        gutterBottom\r\n                        component='h2'\r\n                    >{`${first_name} ${last_name}`}</Typography>\r\n\r\n                    <Typography\r\n                        variant='body2'\r\n                        component='p'\r\n                        color='textSecondary'\r\n                    >{email}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default UserCard","import { Dispatch } from \"redux\";\r\nimport api from \"store/axiosConfig\";\r\nimport { UsersI } from \"store/reducers/users\";\r\nimport { User } from \"store/types/authTypes\";\r\nimport { LOAD_USER_LIST, LOAD_USER_LIST_FAILED, LOAD_USER_LIST_SUCCESS } from \"store/types/usersTypes\";\r\n\r\nexport const loadUsers = (pagination?: number) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(loadUsersStart());\r\n\r\n\r\n        const endpoint = !pagination ? 'users' : `users?page=${pagination}`;\r\n        const { data } = await api.get(endpoint);\r\n        const userlist: Array<User> = Object.values(data.data);\r\n        const { page, per_page, total, total_pages } = data;\r\n        const viewData: UsersI = {\r\n            users: userlist,\r\n            page,\r\n            per_page,\r\n            total,\r\n            total_pages\r\n        }\r\n\r\n        dispatch(loadUsersSuccess(viewData));\r\n\r\n    } catch (error) {\r\n        dispatch(loadUsersFailed(error as string));\r\n    }\r\n}\r\n\r\nconst loadUsersStart = () => ({\r\n    type: LOAD_USER_LIST\r\n})\r\n\r\nconst loadUsersFailed = (error: string) => ({\r\n    type: LOAD_USER_LIST_FAILED,\r\n    payload: { error }\r\n})\r\n\r\nconst loadUsersSuccess = (viewData: UsersI) => ({\r\n    type: LOAD_USER_LIST_SUCCESS,\r\n    payload: { viewData }\r\n})\r\n","import { Box, Typography } from \"@material-ui/core\";\r\nimport UserCard from \"components/UserCard\";\r\nimport React, { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"store\";\r\nimport { loadUsers } from \"store/actions/users\";\r\nimport { User } from \"store/types/authTypes\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\n\r\nconst StyledList = styled(Box)`\r\n${({ theme }) => `\r\n        width: 100%;\r\n        padding: 20px;\r\n        max-width: 300px;\r\n        margin: auto;\r\n        .pagination ul {\r\n            justify-content: center;\r\n        }\r\n`}`;\r\n\r\n\r\nconst UserList: FC<{}> = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {\r\n        page,\r\n        users,\r\n        total,\r\n        per_page,\r\n        isFetching,\r\n        total_pages\r\n    }: any = useSelector<AppState>(state => state.users);\r\n\r\n\r\n    useEffect(() => { dispatch(loadUsers()) }, [dispatch])\r\n\r\n    const paginationHandler = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        dispatch(loadUsers(value))\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledList>\r\n            {\r\n                isFetching ?? <Skeleton />\r\n            }\r\n            <Typography color=\"primary\">Listado - ({total})</Typography>\r\n            {\r\n\r\n                users.map((user: User, index: number) => (\r\n                    <UserCard\r\n                        {...user}\r\n                        delay={index}\r\n                        key={user.email} />\r\n                )).filter((el: typeof UserCard, index: number) => index <= per_page)\r\n            }\r\n            <Pagination\r\n                onChange={paginationHandler}\r\n                className=\"pagination\"\r\n                key='pagination'\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n                page={page}\r\n                count={total_pages} />\r\n        </StyledList>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserList","import { ComponentType } from \"react\";\r\nimport Login from \"pages/Login\";\r\nimport UserList from \"pages/UserList\";\r\n\r\nexport interface RouteI {\r\n    url: string\r\n    label: string\r\n    view: ComponentType<any>\r\n}\r\n\r\nexport const Routes: Array<RouteI> = [\r\n    {\r\n        url: '/login',\r\n        label: 'Iniciar Sesión',\r\n        view: Login\r\n    },\r\n    {\r\n        url: '/users',\r\n        label: 'Listado',\r\n        view: UserList\r\n    }\r\n]","import { useContext } from \"react\";\r\nimport { __RouterContext } from \"react-router\";\r\n\r\nconst useRouter = () => useContext(__RouterContext);\r\n\r\nexport default useRouter;","import { Box } from \"@material-ui/core\";\r\nimport Login from \"pages/Login\";\r\nimport React, { FC } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useTransition, animated as a, config } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\nimport useRouter from \"utils/useRouter\";\r\nimport { RouteI } from \"./Routes\";\r\n\r\n\r\nconst StyledView = styled(Box)`\r\n${({ theme }) => `\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow-x: hidden; \r\n    }\r\n`}`\r\n\r\ninterface ViewTransitionI {\r\n    routes: Array<RouteI>,\r\n    isAuth: boolean\r\n}\r\n\r\nconst ViewTransition: FC<ViewTransitionI> = ({ routes, isAuth }) => {\r\n\r\n\r\n    const { location } = useRouter();\r\n\r\n    const size = { width: '100%', height: '100%' };\r\n\r\n    const transitions = useTransition(location, (location) => location.pathname, {\r\n        from: { position: 'absolute', opacity: 0, transform: 'translate3d(0, 100vh, 0)', ...size },\r\n        enter: { position: 'relative', opacity: 1, transform: 'translate3d(0, 0, 0)', ...size },\r\n        leave: { position: 'absolute', opacity: 0, transform: 'translate3d(0, -20vh, 0)', ...size },\r\n        config: config.slow\r\n    });\r\n\r\n    const views = transitions.map(({ item, props, key }) => (\r\n        <a.div className=\"wrapper\" key={key} style={props}>\r\n            <Switch location={item}>\r\n                {\r\n                    isAuth && routes.map(page => (\r\n                        <Route\r\n                            exact\r\n                            key={page.url}\r\n                            path={page.url}\r\n                            component={page.view}\r\n                        />\r\n                    ))\r\n                }\r\n                {\r\n                    !isAuth && <Login />\r\n                }\r\n            </Switch>\r\n        </a.div>\r\n    ));\r\n\r\n    return <StyledView>{views}</StyledView>\r\n}\r\n\r\n\r\nexport default ViewTransition","import React, { FC, useEffect } from \"react\";\r\nimport AppLayout from \"hoc/AppLayout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"store\";\r\nimport { LoadPrevSession } from \"store/actions/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Routes as routes } from \"./Routes\";\r\nimport ViewTransition from \"./ViewTransition\";\r\n\r\n\r\nconst App: FC<{}> = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { isAuthenticated }: any = useSelector<AppState>(state => state.auth);\r\n\r\n\r\n  useEffect(() => { dispatch(LoadPrevSession()) }, [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) history.push('/users')\r\n  }, [isAuthenticated, history])\r\n\r\n  return (\r\n\r\n    <AppLayout>\r\n      <ViewTransition\r\n        routes={routes}\r\n        isAuth={isAuthenticated} />\r\n    </AppLayout>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}